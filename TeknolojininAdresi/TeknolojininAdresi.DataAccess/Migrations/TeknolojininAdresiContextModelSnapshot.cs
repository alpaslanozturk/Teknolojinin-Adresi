// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeknolojininAdresi.DataAccess.Context;

namespace TeknolojininAdresi.DataAccess.Migrations
{
    [DbContext(typeof(TeknolojininAdresiContext))]
    partial class TeknolojininAdresiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.CartLines", b =>
                {
                    b.Property<int>("CartLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartsId");

                    b.Property<int>("ProductsId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("CartLineId");

                    b.HasIndex("CartsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CartLines");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Carts", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMain");

                    b.Property<decimal>("TotalPrice");

                    b.Property<int?>("UsersId");

                    b.HasKey("CartId");

                    b.HasIndex("UsersId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<string>("Description");

                    b.Property<string>("PictureUrl");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int>("ProductsId");

                    b.Property<decimal>("Rating");

                    b.HasKey("CommentId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<int>("CartsId");

                    b.Property<string>("EMail");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("UsersId");

                    b.HasKey("OrderId");

                    b.HasIndex("CartsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Pictures", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PictureUrl");

                    b.Property<int>("ProductsId");

                    b.HasKey("PictureId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("CategoriesId");

                    b.Property<decimal?>("OldPrice");

                    b.Property<string>("PictureUrl");

                    b.Property<string>("ProductName");

                    b.Property<int>("SellCount");

                    b.Property<decimal>("UnitPrice");

                    b.Property<int>("UnitsInStock");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<int>("RolesId");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.HasIndex("RolesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.CartLines", b =>
                {
                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Carts", "Carts")
                        .WithMany("CartLines")
                        .HasForeignKey("CartsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Products", "Products")
                        .WithMany("CartLines")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Carts", b =>
                {
                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Users", "Users")
                        .WithMany("Carts")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Comments", b =>
                {
                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Products", "Products")
                        .WithMany("Comments")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Orders", b =>
                {
                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Carts", "Carts")
                        .WithMany("Orders")
                        .HasForeignKey("CartsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Users", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Pictures", b =>
                {
                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Products", "Products")
                        .WithMany("Pictures")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Products", b =>
                {
                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TeknolojininAdresi.Entities.Concrete.Users", b =>
                {
                    b.HasOne("TeknolojininAdresi.Entities.Concrete.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
